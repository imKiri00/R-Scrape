version: '3.8'

services:
  reddit-db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network



  scraper:
    build:
      context: ./scraper
      dockerfile: Dockerfile
    volumes:
      - ./shared:/app/shared
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-1234}@reddit-db/${POSTGRES_DB:-redit}
    depends_on:
      reddit-db:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - app-network


  evaluation:
    build:
      context: ./evaluation
      dockerfile: Dockerfile
    volumes:
      - ./shared:/app/shared
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-1234}@reddit-db/${POSTGRES_DB:-redit}
      - GROQ_API_KEY=${GROQ_API_KEY}
    depends_on:
      reddit-db:
        condition: service_healthy
    ports:
      - "8001:8000"
    networks:
      - app-network


  orchestrator:
    build:
      context: ./orchestrator
      dockerfile: Dockerfile
    environment:
      - SCRAPER_URL=http://scraper:8000
      - EVALUATOR_URL=http://evaluation:8000
    depends_on:
      - scraper
      - evaluation
    command: >
      sh -c "
        echo 'Waiting for scraper and evaluation services...' &&
        sleep 30 &&
        python orchestrator_main.py
      "
    networks:
      - app-network


networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: